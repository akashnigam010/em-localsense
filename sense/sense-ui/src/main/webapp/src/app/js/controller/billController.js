app.controller('BillController', ['$scope', '$location', 'Services', '$rootScope', '$route', 'growl', '$mdDialog', '$mdMedia', '$window', '$routeParams', function($scope, $location, Services, $rootScope, $route, growl, $mdDialog, $mdMedia, $window, $routeParams) {    $scope.location = $location.path();    $rootScope.pageTitle = 'Bill Details';    var token = $rootScope.Authtoken;    var headers = {        'Accept': 'application/json',        'Authorization': token    };    $scope.bills = [];    $scope.setTileWidth = function(bill) {        if (bill.fnbItems.length > 0 && bill.barItems.length > 0) {            return 'full-width';        } else {            return 'bill-layout-div';        }    }    $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');    $scope.getBillInformation = function() {        if ($routeParams.isBill == 'true') {            $scope.bills = [];            $scope.bills[0] = Services.getBill();            setItemsToBills($scope.bills);        } else {            var request = {                tableId : $routeParams.id            };            $window.scrollTo(0, 0);            $rootScope.loading = true;            Services.goToBill($rootScope.hosturl, request, headers).success(function(data) {                if (data.result) {                    $scope.bills = data.bills;                    setItemsToBills($scope.bills);                    $rootScope.loading = false;                                           } else {                    growl.addErrorMessage(data.statusCodes.statusCode[0].description);                    $rootScope.loading = false;                }            });        }    };    function setItemsToBills(bills) {        for (var bill of bills) {            setItemsToBill(bill);        }    }    function setItemsToBill(bill) {        bill.fnbItems = [];        bill.barItems = [];        for (var order of bill.orders) {           if (order.type == 'BAR') {                bill.barItems.push(order);            } else {                bill.fnbItems.push(order);            }        }    }    $scope.isUnsettledBill = function(bill) {        if (bill.status == 'UNSETTLED') {            return true;        } else {            return false;        }    };    $scope.isSettledBill = function(bill) {        if (bill.status == 'UNSETTLED') {            return false;        } else {            return true;        }    };    var discountModalObj = {};    $scope.provideDiscount = function(ev, bill, to) {        if ($scope.isSettledBill(bill)) {            return;        }        discountModalObj = {};        if (to == 'FNB') {            if (bill.discount.fnb != null) {                discountModalObj = angular.copy(bill.discount.fnb);            }                        discountModalObj.menuType = 'FNB';        } else {            if (bill.discount.bar != null) {                discountModalObj = angular.copy(bill.discount.bar);            }            discountModalObj.menuType = 'BAR';        }        if (discountModalObj.amount > 0) {            discountModalObj.isDiscountApplied = true;        } else {            discountModalObj.isDiscountApplied = false;        }        discountModalObj.billId = bill.id;        var userAction = $scope.showDiscountModal(ev);        userAction.then(function(answer) {            if (answer == 'apply') {                $window.scrollTo(0, 0);                $rootScope.loading = true;                Services.addEditDiscount($rootScope.hosturl, discountModalObj, headers).success(function(data) {                    if (data.result) {                        setBillData(data);                        growl.addSuccessMessage("Discount applied successfully");                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            } else if (answer == 'remove') {                $window.scrollTo(0, 0);                $rootScope.loading = true;                Services.removeDiscount($rootScope.hosturl, discountModalObj, headers).success(function(data) {                    if (data.result) {                        setBillData(data);                        growl.addSuccessMessage("Discount removed");                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };    function setBillData(data) {        $scope.bills = data.bills;        setItemsToBills($scope.bills);        $rootScope.loading = false;            }    var emailBillModalObj = {};    $scope.emailBill = function(ev, bill) {        emailBillModalObj = {};        emailBillModalObj.billId = bill.id;        var userAction = $scope.showEmailBillModal(ev);        userAction.then(function(answer) {            if (answer) {                $window.scrollTo(0, 0);                $rootScope.loading = true;                Services.emailBill($rootScope.hosturl, emailBillModalObj, headers).success(function(data) {                    if (data.result) {                        growl.addSuccessMessage("Email sent successfully");                        $rootScope.loading = false;                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };    var printBillModalObj = {};    $scope.printBill = function(ev, bill) {        printBillModalObj = {};        printBillModalObj.billId = bill.id;        var userAction = $scope.showPrintBillModal(ev);        userAction.then(function(answer) {            if (answer) {                $window.scrollTo(0, 0);                $rootScope.loading = true;                Services.printBill($rootScope.hosturl, printBillModalObj, headers).success(function(data) {                    if (data.result) {                        growl.addSuccessMessage("Bill printed successfully");                        $rootScope.loading = false;                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };    var settleBillModalObj = {};    var settleBillObj = {};    $scope.settleBill = function(ev, bill) {        settleBillModalObj = {};        settleBillObj = {};        settleBillModalObj = angular.copy(bill);        var userAction = $scope.showSettleBillModal(ev);        userAction.then(function(answer) {            if (answer) {                $window.scrollTo(0, 0);                $rootScope.loading = true;                settleBillObj.billId = settleBillModalObj.id;                settleBillObj.paymentMode = settleBillModalObj.settlement;                settleBillObj.reasonForCancel = settleBillModalObj.reasonForCancel;                Services.settleBill($rootScope.hosturl, settleBillObj, headers).success(function(data) {                    if (data.result) {                        for (var bill of $scope.bills) {                            bill.status = data.bill.status;                        }                        growl.addSuccessMessage("Bill settled and table closed successfully");                        $rootScope.loading = false;                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };    var editBillModalObj = {};    var editBillObj = {};    $scope.editBill = function(ev, bill) {        editBillModalObj = {};        editBillObj = {};        editBillModalObj = angular.copy(bill);        var userAction = $scope.showEditBillModal(ev);        userAction.then(function(answer) {            if (answer) {                $window.scrollTo(0, 0);                $rootScope.loading = true;                editBillObj.billId = editBillModalObj.id;                editBillObj.paymentMode = editBillModalObj.settlement;                editBillObj.reasonForCancel = editBillModalObj.cancelReason;                Services.editBill($rootScope.hosturl, editBillObj, headers).success(function(data) {                    if (data.result) {                        growl.addSuccessMessage("Bill updated successfully");                        $rootScope.loading = false;                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };    var splitBillModalObj = {};    $scope.splitBill = function(ev, bill) {        var splitBill = angular.copy(bill);        splitBillModalObj = {};        splitBillModalObj.itemsMap_1 = getItemsMap(splitBill);        var userAction = $scope.showSplitBillModal(ev);        userAction.then(function(answer) {            if (answer) {                                var splitObject = getItemsInList(splitBillModalObj);                splitObject.billId = bill.id;                $window.scrollTo(0, 0);                $rootScope.loading = true;                Services.splitBill($rootScope.hosturl, splitObject, headers).success(function(data) {                    if (data.result) {                        $scope.bills[0] = data.billOne;                        $scope.bills[1] = data.billTwo;                        setItemsToBills($scope.bills);                        growl.addSuccessMessage("Bill splitted successfully");                        $rootScope.loading = false;                    } else {                        growl.addErrorMessage(data.statusCodes.statusCode[0].description);                        $rootScope.loading = false;                    }                });            }        });    };     function getItemsMap(bill) {        var itemsMap = {};        for (var item of bill.fnbItems) {            itemsMap[item.id] = item;        }        for (var item of bill.barItems) {            itemsMap[item.id] = item;        }        return itemsMap;    };    function getItemsInList(modalObject) {        var splitObject = {};        var itemListOne = [];        var itemListTwo = [];        $.each(modalObject.itemsMap_1, function(key, value) {            itemListOne.push(value);        });        splitObject.itemListOne = itemListOne;        $.each(modalObject.itemsMap_2, function(key, value) {            itemListTwo.push(value);        });        splitObject.itemListTwo = itemListTwo;        return splitObject;    }    $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');    $scope.showDiscountModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = discountModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.discountModalObj = dataToPass;                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };            }],            templateUrl: 'app/views/bill/discount.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    $scope.showEmailBillModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = emailBillModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.emailBillModalObj = dataToPass;                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };            }],            templateUrl: 'app/views/bill/emailBill.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    $scope.showPrintBillModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = printBillModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.printBillModalObj = dataToPass;                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };            }],            templateUrl: 'app/views/bill/printBill.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    $scope.showSettleBillModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = settleBillModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.settleBillModalObj = dataToPass;                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };            }],            templateUrl: 'app/views/bill/settleBill.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    $scope.showEditBillModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = editBillModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.editBillModalObj = dataToPass;                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };            }],            templateUrl: 'app/views/bill/editBill.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    $scope.showSplitBillModal = function(ev) {        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;        var dataObject = splitBillModalObj;        return $mdDialog.show({            locals: { dataToPass: dataObject },            controller: ['$scope', 'dataToPass', function($scope, dataToPass) {                $scope.splitBillModalObj = dataToPass;                $scope.splitBillModalObj.itemsMap_2 = {};                $scope.hide = function() {                    $mdDialog.hide();                };                $scope.cancel = function() {                    $mdDialog.cancel();                };                $scope.answer = function(answer) {                    $mdDialog.hide(answer);                };                $scope.moveItem = function(id, bill) {                    if (bill == 1) {                        process(id, $scope.splitBillModalObj.itemsMap_1, $scope.splitBillModalObj.itemsMap_2);                    } else {                        process(id, $scope.splitBillModalObj.itemsMap_2, $scope.splitBillModalObj.itemsMap_1);                    }                };                function process(id, from, to) {                    var itemToMoveMinus = from[id];                    var itemToMovePlus = to[id];                    itemToMoveMinus.quantity--;                    if (itemToMoveMinus.quantity == 0) {                        delete from[id];                    }                    if (itemToMovePlus == undefined) {                        itemToMovePlus = angular.copy(itemToMoveMinus);                        itemToMovePlus.quantity = 1;                    } else {                        itemToMovePlus.quantity++;                    }                    to[id] = itemToMovePlus;                }            }],            templateUrl: 'app/views/bill/splitBill.html',            parent: angular.element(document.body),            targetEvent: ev,            clickOutsideToClose: false,            fullscreen: useFullScreen        });        $scope.$watch(function() {            return $mdMedia('xs') || $mdMedia('sm');        }, function(wantsFullScreen) {            $scope.customFullscreen = (wantsFullScreen === true);        });    };    }]);